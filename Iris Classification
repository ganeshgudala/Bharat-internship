#Download the dataset from https://www.kaggle.com/datasets/sachgarg/iris-classification
import pandas as pd
import numpy as np
import tensorflow as tf
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder

# Step 1: Read the Iris dataset from CSV
iris_data = pd.read_csv('Iris.csv')

# Step 2: Preprocess the data
X = iris_data.iloc[:, :-1].values
y = iris_data.iloc[:, -1].values.reshape(-1, 1)  # Reshape y to a column vector

# One-hot encode the target variable
encoder = OneHotEncoder()
y = encoder.fit_transform(y).toarray()

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Build and train a neural network model
model = tf.keras.Sequential([
    tf.keras.layers.Dense(64, activation='relu', input_shape=(4,)),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(3, activation='softmax')
])

model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

model.fit(X_train, y_train, epochs=50, batch_size=32, verbose=0)

# Step 4: Evaluate the model's performance
_, accuracy = model.evaluate(X_test, y_test)
print("Accuracy:", accuracy)
